name: Repo Synchronization

on:
  repository_dispatch:
    types: [api-image-updated]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to update'
        required: true
        type: choice
        options:
          - development
          - staging
          - production
        default: 'staging'
      image:
        description: 'Docker image to update'
        required: true
        type: string
        default: 'spectra/api'
      tag:
        description: 'Docker image tag'
        required: true
        type: string
        default: 'latest'

permissions:
  contents: write
  id-token: write

jobs:
  update-kubernetes-manifests:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.set-env.outputs.env }}
      image: ${{ steps.set-env.outputs.image }}
      tag: ${{ steps.set-env.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Set environment variables
        id: set-env
        run: |
          if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            echo "image=${{ github.event.client_payload.image }}" >> $GITHUB_OUTPUT
            echo "tag=${{ github.event.client_payload.tag }}" >> $GITHUB_OUTPUT
            echo "env=staging" >> $GITHUB_OUTPUT
          else
            echo "image=${{ github.event.inputs.image }}" >> $GITHUB_OUTPUT
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
            echo "env=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          fi
          
      - name: Update Kubernetes manifests
        env:
          IMAGE: ${{ steps.set-env.outputs.image }}
          TAG: ${{ steps.set-env.outputs.tag }}
        run: |
          cd kubernetes
          sed -i "s|image: ${IMAGE}:.*|image: ${IMAGE}:${TAG}|" deployment.yaml
          
      - name: Commit changes
        env:
          IMAGE: ${{ steps.set-env.outputs.image }}
          TAG: ${{ steps.set-env.outputs.tag }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add kubernetes/deployment.yaml
          git commit -m "Update ${IMAGE} to version ${TAG}"
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          
  deploy-to-environment:
    needs: update-kubernetes-manifests
    runs-on: ubuntu-latest
    environment: ${{ needs.update-kubernetes-manifests.outputs.env }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions
          aws-region: us-west-2
          
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name spectra-${{ needs.update-kubernetes-manifests.outputs.env }} --region us-west-2
        
      - name: Deploy to environment
        env:
          ENV: ${{ needs.update-kubernetes-manifests.outputs.env }}
        run: |
          kubectl apply -f kubernetes/configmap.yaml -n spectra-${ENV}
          kubectl apply -f kubernetes/deployment.yaml -n spectra-${ENV}
          kubectl apply -f kubernetes/service.yaml -n spectra-${ENV}
          kubectl apply -f kubernetes/ingress.yaml -n spectra-${ENV}
          
      - name: Verify deployment
        env:
          ENV: ${{ needs.update-kubernetes-manifests.outputs.env }}
        run: |
          kubectl rollout status deployment/spectra-api -n spectra-${ENV}
          
      - name: Notify other repositories
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: Vesryin/spectra-web
          event-type: api-updated
          client-payload: |
            {
              "environment": "${{ needs.update-kubernetes-manifests.outputs.env }}",
              "version": "${{ needs.update-kubernetes-manifests.outputs.tag }}"
            }
